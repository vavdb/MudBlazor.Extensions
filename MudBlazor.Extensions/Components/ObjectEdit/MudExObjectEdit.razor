@using MudBlazor.Extensions.Extensions
@using MudBlazor.Extensions.Components.ObjectEdit.Options
@using MudBlazor.Extensions.Helper
@typeparam T

<style>
    .mud-ex-object-edit-group-flat .mud-expand-panel-text:after {
        background-color: var(@GroupLineColor.CssVarName());
    }
</style>


@if (IsLoading || IsInternalLoading)
{
    <MudOverlay Class="mud-ex-loading-overlay" Visible="@(IsLoading || IsInternalLoading)" DarkBackground="@(!LightOverlayLoadingBackground)" LightBackground="@LightOverlayLoadingBackground" Absolute="true" >
        <MudProgressCircular Size="Size.Large" Color="Color.Primary" Indeterminate="true" />
    </MudOverlay>
}

@if (Primitive)
{
    <DynamicComponent Type="@typeof(MudExObjectEdit<ModelForPrimitive<T>>)" Parameters="GetAttributesForPrimitive()"></DynamicComponent>
}
else
{
    <div class="@($"mud-ex-object-edit {Class}")">
        <MudPaper Class="@($"{ToolBarPaperClass} {(StickyToolbar ? "mud-ex-toolbar-sticky" : "")}")" Style="@ToolbarStyle()" Elevation="@ToolBarElevation">
            <MudToolBar Class="@($"{ToolBarClass} pr-4 mt-2 mb-2")">
                @if (InternalToolBarContent != null)
                {
                    @InternalToolBarContent
                }
                @if (ToolBarContent != null)
                {
                    @ToolBarContent
                }
                @if (ToolBarActionAlignment == ActionAlignment.Right)
                {
                    <MudSpacer/>
                }
                @if (FilterMode != PropertyFilterMode.Disabled)
                {
                    <MudTextField @ref="_searchBox" OnBlur="@(FilterBoxBlur)" OnKeyDown="@(FilterKeyPress)" Class="@($"mud-ex-animate-all-properties mud-ex-property-filter {(_searchActive || FilterMode == PropertyFilterMode.AlwaysVisible ? "active" : "")}")" Immediate="true" Clearable="true" @bind-Value="Filter" T="string" Placeholder="@LocalizerToUse.TryLocalize("Filter")" Label="@LocalizerToUse.TryLocalize("Filter")"/>
                }
                @if (FilterMode == PropertyFilterMode.Toggleable)
                {
                    <MudIconButton Icon="@Icons.Material.Outlined.Search" Color="@(string.IsNullOrWhiteSpace(Filter) ? Color.Default : Color.Warning)" OnClick="@(ToggleSearchBox)"/>
                }
                @if (GroupsCollapsible && _groups.Count > 1)
                {
                    <MudTooltip Text="Expand/Collapse">
                        <MudIconButton Icon="@Icons.Material.Filled.Expand" OnClick="@(ExpandCollapse)"/>
                    </MudTooltip>
                }
                @if (GlobalResetSettings.AllowReset)
                {
                    <MudTooltip Text="@GlobalResetSettings.ResetText">
                        <MudIconButton Icon="@GlobalResetSettings.ResetIcon" OnClick="@(OnResetClick)"/>
                    </MudTooltip>
                }
            </MudToolBar>
        </MudPaper>
        <MudExpansionPanels Class="mud-ex-object-edit-panels" DisableBorders="@(GroupingStyle == GroupingStyle.Flat)" Elevation="@(GroupElevation ?? (GroupingStyle == GroupingStyle.Flat ? 0 : 1))" MultiExpansion="true">
            @foreach (var grouping in GroupedMetaPropertyInfos())
            {
                var objectEditPropertyMetas = MetaInformation?.Ordered(grouping).ToList();
                var groupName = !string.IsNullOrWhiteSpace(grouping.Key) ? grouping.Key : DefaultGroupName;
                var pathStr = string.Join(" > ", objectEditPropertyMetas?.FirstOrDefault()?.PropertyName?.Split('.').SkipLast(1) ?? Array.Empty<string>());
                @if (PathDisplayMode == PathDisplayMode.DisplayAsGroupName && !string.IsNullOrEmpty(pathStr))
                {
                    groupName = pathStr;
                }
                <MudExpansionPanel @ref="@ExpansionPanel" IsInitiallyExpanded="true" Disabled="@(!GroupsCollapsible)" Class="@($"mt-3 {(!string.IsNullOrWhiteSpace(groupName) ? CssClassName : "mud-ex-hidden-group")}")" Text="@(!string.IsNullOrWhiteSpace(groupName) ? LocalizerToUse.TryLocalize(groupName) : groupName)">
                    @if (PathDisplayMode == PathDisplayMode.DisplaySeparate && !string.IsNullOrEmpty(pathStr) && pathStr != groupName)
                    {
                        <p class="@(GroupingStyle == GroupingStyle.Flat ? "mud-ex-group-path-text-flat" : "mud-ex-group-path-text-default")">@pathStr</p>
                    }
                    
                    @if (ShouldAddGrid(grouping))
                    {
                        <MudGrid>
                            @foreach (var property in objectEditPropertyMetas)
                            {
                                @RenderPropertyEdit(property)
                            }
                        </MudGrid>
                    }
                    else
                    {
                        @foreach (var property in objectEditPropertyMetas)
                        {
                            @RenderPropertyEdit(property)
                        }
                    }
                    
                </MudExpansionPanel>
            }
        </MudExpansionPanels>
        @if (AddScrollToTop)
        {
            <MudScrollToTop ScrollBehavior="ScrollBehavior.Smooth">
                <MudFab Color="Color.Tertiary" Icon="@Icons.Filled.ArrowCircleUp"/>
            </MudScrollToTop>
        }
    </div>
}
@code {

    RenderFragment RenderPropertyEdit(ObjectEditPropertyMeta property)
    {
        return @<MudExPropertyEdit @ref="@Ref" DisableFieldFallback="@DisableFieldFallback"
                                   ShowPathAsTitle="@ShowPathAsTitleForEachProperty"
                                   IsLoading="@(IsLoading || IsInternalLoading)"
                                   AutoSkeletonOnLoad="@AutoSkeletonOnLoad"
                                   PropertyValueChanged="@OnPropertyChange"
                                   ActiveFilterTerm="@Filter"
                                   Localizer="@LocalizerToUse"
                                   PropertyResetSettings="@DefaultPropertyResetSettings"
                                   PropertyMeta="@property">
    </MudExPropertyEdit>;
    }
}