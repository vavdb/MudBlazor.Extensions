@page "/dialog-object-edit"
@using MudBlazor.Extensions.Options
@using System.ComponentModel.DataAnnotations
@using Newtonsoft.Json
@inject IJSRuntime Js
@inject IDialogService dialogService;

<PageTitle>Sample Dialog</PageTitle>

<SampleApplication.Client.Shared.DemoComponent CodeFile="@($"Pages/{GetType().Name}.razor")" >
    <MudButton OnClick="@ShowSampleDialog" Variant="Variant.Filled" Color="Color.Primary">Edit Test Object</MudButton>
</SampleApplication.Client.Shared.DemoComponent>

@code {

    public class TestObject
    {
        [Required]
        public string Value { get; set; } = "Test";
        [Range(1, 100)]
        public int Number { get; set; }
        public LogLevel logLevel { get; set; }
    }

    public DialogOptionsEx Options => new()
    {
            MaximizeButton = true,
            CloseButton = true,
            FullHeight = true,
            CloseOnEscapeKey = true,
            MaxWidth = MaxWidth.Medium,
            FullWidth = true,
            DragMode = MudDialogDragMode.Simple,
            Animations = new[] { AnimationType.SlideIn },
            Position = DialogPosition.CenterRight,
            DisableSizeMarginY = true,
            DisablePositionMargin = true
        };

    private async Task ShowSampleDialog()
    {
        var res = await dialogService.EditObject(new TestObject(), "Auto Generated Editor for TestObject", OnSubmit, Options, meta => meta.WrapEachInMudItem(i => i.xs = 6));
        if (!res.Cancelled)
            await Js.InvokeVoidAsync("alert", JsonConvert.SerializeObject(res.Result));
    }
    

    private async Task<string> OnSubmit(TestObject value, MudExObjectEditDialog<TestObject> dialog)
    {
        await Task.Delay(2000); // Simulate server save
        if (value.Value == "Test")
            return "'Test' is as Value not allowed or already exists";
        if (value.Value == "Exception")
            throw new Exception("This is a test exception");
        return null;
    }

}
